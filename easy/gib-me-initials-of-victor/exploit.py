#!/usr/bin/env python3
from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKCYAN = '\033[96m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = '\033[1m'
    UNDERLINE = '\033[4m'
    ENDCOLOR = '\x1b[0m'


def bruteforce_IV(iv_known_part, signature, ciphertext):
    signature = bytes.fromhex(signature)
    for i in range(0xFF+1):
        for j in range(0xFF+1):
            unknown_part = str(hex(i)[2:].zfill(2))
            unknown_part += str(hex(j)[2:].zfill(2))
            new_iv = bytes.fromhex(unknown_part + iv_known_part)
            key = [hex(a ^ b)[2:].zfill(2) for a, b in zip(signature, new_iv)][::-1]
            key = "".join(key)
            cipher = AES.new(bytes.fromhex(key), AES.MODE_CBC, new_iv)
            plaintext = cipher.decrypt(bytes.fromhex(ciphertext))
            if b"PWNME" in plaintext:
                print("\n\tFlag: ", unpad(plaintext, 16).decode(),end="\n\n")

ciphertext = {'ciphertext': 'ec99a438e52de135ad277039ce232c148aedd7c3f9a0688a3c95b6de4b4c35acca54edced84032f70c8ea88a1338d361b0fec7861c2eb26c244b99de45e60f9c361b0e2a7331b40cdf3df7bb2d4c'}["ciphertext"]

print(f"{bcolors.OKCYAN}cipher returned: {bcolors.ENDCOLOR}", ciphertext)
signature = ciphertext[-32:]
print(f"{bcolors.OKGREEN}signature returned: {bcolors.ENDCOLOR}", signature)
known_iv = ciphertext[:28]
print(f"{bcolors.OKGREEN}known_iv returned: {bcolors.ENDCOLOR}", known_iv)
ciphertext = ciphertext[28:-32]
print(f"{bcolors.FAIL}ciphertext returned: {bcolors.ENDCOLOR}", ciphertext)

bruteforce_IV(known_iv, signature, ciphertext)
